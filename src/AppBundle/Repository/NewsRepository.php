<?php

namespace AppBundle\Repository;

use AppBundle\Entity\News;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends EntityRepository
{
    /**
     * @param int $currentPage
     * @return Paginator
     */
    public function getAllNews($currentPage = 1): Paginator
    {
        $query = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('n')
            ->from(News::class, 'n')
            ->orderBy('n.time', 'DESC')
            ->getQuery();

        $paginator = $this->paginate($query, $currentPage);

        return $paginator;
    }

    /**
     * @param string $hashtag
     * @return array
     */
    public function findByHashtag(string $hashtag = ''): array
    {
        $result = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('n')
            ->from(News::class, 'n')
            ->leftJoin('n.hashtags', 'h')
            ->where('h.text = :hashtag')
            ->orderBy('n.time', 'DESC')
            ->setParameter('hashtag', $hashtag)
            ->setMaxResults(20)
            ->getQuery()
            ->getResult();

        return $result;
    }

    /**
     * @param string $keyword
     * @return array
     */
    public function findByText(string $keyword = ''): array
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder();

        $result = $qb
            ->select('n')
            ->from(News::class, 'n')
            ->leftJoin('n.hashtags', 'h')
            ->where($qb->expr()->orX(
                $qb->expr()->like('n.text', ':keyword'),
                $qb->expr()->like('h.text', ':keyword')
            ))
            ->setParameter('keyword', '%' . $keyword . '%')
            ->orderBy('n.time', 'DESC')
            ->getQuery()
            ->getResult();

        return $result;
    }

    /**
     * @param $dql
     * @param int $page
     * @param int $limit
     * @return Paginator
     */
    public function paginate($dql, $page = 1, $limit = 20): Paginator
    {
        $paginator = new Paginator($dql);

        $paginator->getQuery()
            ->setFirstResult($limit * ($page - 1))
            ->setMaxResults($limit);

        return $paginator;
    }
}
